java.terms.anonymous.class=\u533f\u540d\u30af\u30e9\u30b9
java.terms.class=\u30af\u30e9\u30b9
java.terms.package=\u30d1\u30c3\u30b1\u30fc\u30b8
java.terms.type.parameter=\u578b\u30d1\u30e9\u30e1\u30fc\u30bf
java.terms.method=\u30e1\u30bd\u30c3\u30c9
java.terms.field=\u30d5\u30a3\u30fc\u30eb\u30c9
java.terms.parameter=\u30d1\u30e9\u30e1\u30fc\u30bf
java.terms.variable=\u5909\u6570
java.terms.interface=\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9
java.terms.exception=\u4f8b\u5916
java.terms.static.initializer=\u9759\u7684\u521d\u671f\u5316\u5b50
java.terms.instance.initializer=\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u521d\u671f\u5316\u5b50
java.terms.enum=enum
java.terms.annotation.interface=@interface
java.terms.label=\u30e9\u30d9\u30eb
java.terms.constructor=\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf
terms.directory=\u30c7\u30a3\u30ec\u30af\u30c8\u30ea
terms.file=\u30d5\u30a1\u30a4\u30eb
java.terms.of.anonymous.class=\u533f\u540d\u30af\u30e9\u30b9\u306e {0}
java.terms.of.interface=\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9 {1} \u306e {0}
java.terms.of.enum=enum {1} \u306e {0}
java.terms.of.annotation.type=\u6ce8\u91c8\u578b {1} \u306e {0}
java.terms.of.class=\u30af\u30e9\u30b9 {1} \u306e {0}
java.terms.variable.of.method={1} \u306e {0}
java.terms.expression=expression
terms.property=\u30d7\u30ed\u30d1\u30c6\u30a3
unexpected.token=Unexpected token
unexpected.eof=Unexpected end of file

completion.no.suggestions=No suggestions
completion.quick.javadoc.ad=Did you know that Quick Documentation View ({0}) works in completion lookups as well?
completion.quick.implementations.ad=Did you know that Quick Definition View ({0}) works in completion lookups as well?
completion.dot.etc.ad=Dot, space and some other keys will also close this lookup and be inserted into editor
completion.smart.enter.ad=Use {0} to syntactically correct your code after completing (balance parentheses etc.)

xml.terms.tag=\u30bf\u30b0
xml.terms.entity=entity
xml.terms.xml.tag=XML \u30bf\u30b0
xml.terms.attribute=\u5c5e\u6027
xml.terms.attribute.value=\u5c5e\u6027\u5024
xml.terms.variable=variable
error.cannot.resolve=Cannot resolve
dialog.template.data.language.caption=<html><body>\
  Template data languages are the underlying languages in template files like those of FreeMarker/Velocity frameworks.<br>\
  To change template data language settings {0} uses for a file, directory, or an entire project, \
  click an item and then select a language from the Template Data Language list.<br><br>\
  Note:<br>\
  If not specified, files and directories inherit Template Data Language settings from parent.<br></body></html>
template.data.language.configurable=Template Data Languages
template.data.language.configurable.tree.table.title=Template data language
template.data.language.override.warning.text=There are template data languages specified for the subdirectories. Override them?
template.data.language.override.warning.title=Override Subdirectory Template Data Languages
quickfix.change.template.data.language.text=Change {0} template data language to...
incorrect.name=Incorrect name

jrt.node.short=[JRT]
jrt.node.long=[Java Run-time Modules]
jrt.not.available.message=You need to run IDEA on Java 8 to be able to use modular JDK. Sorry.
jrt.not.available.title=Unsupported JDK ''{0}'' detected

compound.run.configuration.cycle={0} ''{1}'' causes dependency cycle and cannot be added

mark.as.unmark=Unmark as {0}
mark.as.unmark.excluded=Cancel Exclusion
mark.as.unmark.several=Unmark Roots
