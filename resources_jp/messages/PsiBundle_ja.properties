psi.scanning.files.progress=\u30d5\u30a1\u30a4\u30eb\u3092\u30b9\u30ad\u30e3\u30f3\u3057\u3066\u3044\u307e\u3059...
psi.error.incorrect.class.template.message={0} \u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093 - {1} \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002
psi.search.inheritors.of.class.progress={0} \u306e\u7d99\u627f\u3092\u691c\u7d22\u3057\u3066\u3044\u307e\u3059...
psi.search.inheritors.progress=\u7d99\u627f\u3092\u691c\u7d22\u3057\u3066\u3044\u307e\u3059...
psi.search.for.word.progress={0} \u3092\u691c\u7d22\u3057\u3066\u3044\u307e\u3059...
psi.search.in.non.java.files.progress=\u975e java \u30d5\u30a1\u30a4\u30eb\u306e\u4f7f\u7528\u7b87\u6240\u3092\u5206\u6790\u3057\u3066\u3044\u307e\u3059...

psi.search.scope.project.and.libraries=\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u30e9\u30a4\u30d6\u30e9\u30ea
psi.search.scope.libraries=Libraries
psi.search.scope.project=\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u30d5\u30a1\u30a4\u30eb
psi.search.scope.production.files=\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u88fd\u54c1\u30d5\u30a1\u30a4\u30eb
psi.search.scope.test.files=\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u30c6\u30b9\u30c8 \u30d5\u30a1\u30a4\u30eb
psi.search.scope.intersection={0} \u3068 {1} \u306e\u4ea4\u70b9
psi.search.scope.union={0} \u3068 {1} \u306e\u30e6\u30cb\u30aa\u30f3

# {0} - file path, {1} - localized IOException message.
codestyle.cannot.save.scheme.file=\u30b3\u30fc\u30c9 \u30b9\u30bf\u30a4\u30eb \u30b9\u30ad\u30fc\u30e0 {0} \u3092\u4fdd\u5b58\u3067\u304d\u307e\u305b\u3093\u3002 {1}
codestyle.cannot.save.settings.directory.cant.be.created.message=\u30b3\u30fc\u30c9 \u30b9\u30bf\u30a4\u30eb \u30b9\u30ad\u30fc\u30e0\u3092\u4fdd\u5b58\u3067\u304d\u307e\u305b\u3093\u3002 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea {0} \u306f\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3002
codestyle.cannot.save.settings.directory.cant.be.created.title=\u8a2d\u5b9a\u3092\u4fdd\u5b58\u3067\u304d\u307e\u305b\u3093

el.identifier.expected=\u8b58\u5225\u5b50\u304c\u5fc5\u8981\u3067\u3059
el.expression.expected=\u5f0f\u304c\u5fc5\u8981\u3067\u3059
el.rbracket.expected=] \u304c\u5fc5\u8981\u3067\u3059
el.unexpected.end.of.file=\u4e0d\u8981\u306a EOF \u3067\u3059
el.lparen.expected=( \u304c\u5fc5\u8981\u3067\u3059
el.rparen.expected=) \u304c\u5fc5\u8981\u3067\u3059
el.colon.expected=\: \u304c\u5fc5\u8981\u3067\u3059
el.value.expected=\u5024\u304c\u5fc5\u8981\u3067\u3059
el.cannot.resolve.function=\u95a2\u6570\u3092\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093
el.cannot.resolve.namespace=\u540d\u524d\u7a7a\u9593\u3092\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093
el.cannot.resolve.property=\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093 (\u30c0\u30a4\u30ca\u30df\u30c3\u30af \u30d7\u30ed\u30d1\u30c6\u30a3 ?)
el.cannot.resolve.method=Cannot resolve method ''{0}''() #loc
el.mismatched.parameters.count=Different number of formal and actual parameters
el.declare.variable.intention.family=Declare Variable As External Data
el.declare.variable.via.usebean.intention.name=Declare external variable as <jsp:useBean />
el.declare.variable.via.comment.annotation.intention.name=Declare external variable in comment annotation
el.cannot.resolve.variable=Cannot resolve variable ''{0}'' #loc
jsf.el.out.of.attribute=JSF EL out of attribute #loc
jsf.method.call.is.nonstd.extension=Method call is nonstandard extension #loc

search.scope.unknown=<unknown scope>
search.scope.module=Module ''{0}''
search.scope.module.runtime=Module ''{0}'' runtime scope

anonymous.class.derived.display={0} \u304b\u3089\u6d3e\u751f\u3057\u305f\u533f\u540d\u30af\u30e9\u30b9
local.class.preposition=\u30ed\u30fc\u30ab\u30eb
anonymous.class.context.display={0} \u306e\u533f\u540d
enum.constant.context=Enum constant ''{0}'' in ''{1}''
class.context.display={0} in {1}
method.context.display={0}() in {1}
aux.context.display=(in {0})
jsp.taglib.method.reference.error.class.is.not.valid=\u30af\u30e9\u30b9\u304c\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093
jsp.taglib.method.reference.error.class.is.not.public=\u30af\u30e9\u30b9\u304c\u30d1\u30d6\u30ea\u30c3\u30af\u3067\u306f\u3042\u308a\u307e\u305b\u3093
jsp.taglib.method.reference.error.no.such.method=\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3042\u308a\u307e\u305b\u3093
jsp.taglib.method.reference.error.method.should.be.public.or.static=\u30e1\u30bd\u30c3\u30c9\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u307e\u305f\u306f\u9759\u7684\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093
jsp.taglib.method.reference.error.signature.is.different=\u30b7\u30b0\u30cd\u30c1\u30e3\u304c\u7570\u306a\u308a\u307e\u3059
jsp.taglib.method.reference.error.different.return.type=\u7570\u306a\u308b\u623b\u308a\u578b
jsp.documentation.message.required=\u5fc5\u8981 \:&nbsp;{0}
jsp.documentation.message.can.have.runtime.value=\u30e9\u30f3\u30bf\u30a4\u30e0\u5024 \:&nbsp;{0}
jsp.documentation.message.type=\u578b \:&nbsp;{0}
jsp.documentation.message.fragment=\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8 \:&nbsp;{0}
jsp.documentation.message.custom.tag.name=\u30ab\u30b9\u30bf\u30e0 \u30bf\u30b0\u540d
jsp.documentation.message.custom.function.name=Custom function name
jsp.documentation.message.custom.attribute.name=\u30ab\u30b9\u30bf\u30e0\u5c5e\u6027\u540d
jsp.documentation.message.description=\u8aac\u660e \:&nbsp;{0}
jsp.documentation.message.example.of.use=\u4f7f\u7528&nbsp;\u306e&nbsp;\u4f8b \:<br>{0}

#access levels
default.package.presentation=<\u30c7\u30d5\u30a9\u30eb\u30c8>
anonymous.class.display=\u533f\u540d\u30af\u30e9\u30b9
code.from.context.display={0} \u304b\u3089\u306e\u30b3\u30fc\u30c9
code.display=\u30b3\u30fc\u30c9
invalid.regular.expression.message=Invalid regular expression {0}
#psi reference provider options
qualified.resolve.class.reference.provider.option=Tells reference provider to process only qualified class references (e.g. not resolve String as java.lang.String)
default.path.evaluator.option=Tells reference provider how evaluate default path for given file
el.declare.variable.find.acceptable.class=Find acceptable class
0.is.not.an.identifier=''{0}'' is not an identifier.
cannot.modify.a.read.only.directory=Cannot modify a read-only directory ''{0}''.
cannot.modify.a.read.only.file=Cannot modify a read-only file ''{0}''.
cannot.delete.a.read.only.file=Cannot delete a read-only file ''{0}''.
0.expected={0} expected
cannot.resolve.symbol=Cannot resolve symbol ''{0}''

# suppress inspection "UnusedProperty"
packageLocal.visibility.presentation=package local
# suppress inspection "UnusedProperty"
protected.visibility.presentation=protected
# suppress inspection "UnusedProperty"
private.visibility.presentation=private
# suppress inspection "UnusedProperty"
public.visibility.presentation=public
# suppress inspection "UnusedProperty"
abstract.visibility.presentation=abstract
# suppress inspection "UnusedProperty"
static.visibility.presentation=static
# suppress inspection "UnusedProperty"
final.visibility.presentation=final
# suppress inspection "UnusedProperty"
native.visibility.presentation=native
# suppress inspection "UnusedProperty"
synchronized.visibility.presentation=synchronized
# suppress inspection "UnusedProperty"
strictfp.visibility.presentation=strictfp
# suppress inspection "UnusedProperty"
transient.visibility.presentation=transient
# suppress inspection "UnusedProperty"
volatile.visibility.presentation=volatile
# suppress inspection "UnusedProperty"
default.visibility.presentation=default
